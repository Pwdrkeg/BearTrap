# This is where the triggers are setup, you can use multiple triggers of
# multiple types

triggers:
  
  # TCP Port Trigger
  # Listens to specified port for connection, upon full connection the trigger
  # is fired
  # 
  # Parameters:
  #   port: TCP port number to listen to
  #   address: address to bind to
  
   # Common port to scan
 - type: TCPPort
   port: 8080
   address: 0.0.0.0
   
   # Imitate Microsoft terminal services
 - type: TCPPort
   port: 3389
   address: 0.0.0.0
   
   # Use semi-interactive ftp trigger
 - type: FTP
   banner: "BearTrap-ftpd Service ready"

# This is where the firewall interface is defined, one interface right now,
# only applies to localhost

alert_handlers:
  
  # Commandline block
  # Use a system command to blacklist IP address, such as adding to a PF table,
  # adding a new rule to iptables, etc..
  #
  # Parameters:
  #   block_command: Command to use to blacklist IP address, $IP will be
  #     replaced with blacklisted address after it has been sanitized.  Use
  #     $RAW_IP to bypass sanitization (NOT RECOMMENDED)
  #   unblock_command: Reverse of block_command, same details
  #   regexp: regexp string used to sanitize IP address.  Matched characters
  #     will be removed.  Default is /[^\.0-9]/ [OPTIONAL]
  
  # Example: iptables command used to add a rule to drop packets from
  # offending addresses.
  - type: Commandline
    block_command: "/sbin/iptables -A INPUT -s $IP -j DROP"
    unblock_command: "/sbin/iptables -D INPUT -s $IP -j DROP"
  
  # Example: PF using a blacklist table titled "blacklist".  Requires a line
  # in the PF ruleset similar to "block in on $int_if from <blacklist> to any"
  #
  #- type: Commandline
  #  block_command: "/sbin/pfctl -t blacklist -T add $IP"
  #  unblock_command: "/sbin/pfctl -t blacklist -T delete $IP"
  
  # Example: IPFW command used to deny all ip traffic from the offending IP
  # address.  Uses table number 9 below, change table number to suit your
  # environment
  #- type: Commandline
  #  block_command: "/sbin/ipfw table 9 add $IP/32"
  #  unblock_command: "/sbin/ipfw table 9 delete $IP/32"

# Distributors send out alerts to other hosts.  Pretty self explanitory

distributors:
    
  # Signed Broadcast Distributor
  # Binds to specified port and sends a packet when an alert is raised to the 
  # broadcast address of your choosing to allow other hosts running BearTrap to
  # respond accordingly.  Uses ca-signed certificate to sign/verify packet data.
  #
  #
  # Parameters:
  #   protocol: Protocol to use to broadcast the alert (UDP is only option
  #     right now).
  #   bind: Address to bind to when listening for other alerts.
  #     Defaults to 0.0.0.0. [OPTIONAL]
  #   port: Port number to bind to as well as to send alerts out to.
  #   address: Broadcast address that the alert packet is sent to.
  #   ca_cert: Certificate of CA.
  #   cert: Client's certificate, signed by the CA.
  #   key: Private key.
  
  - type: SignedBroadcast
    protocol: udp
    bind: 0.0.0.0
    port: 4321
    address: 192.168.1.255
    ca_cert: ssl/ca.crt
    cert: ssl/bear_trap.crt
    key: ssl/bear_trap.key